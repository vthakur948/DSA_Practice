find the  unique substrings from a single string.
what is length of longest and smallest substring.
Reverse a char of String 
Reverse a Sentence of String
find a unique char of String

<------------------------------------------------------------------------------------------------------------------------->
fun main() {
// find a unique char of String
     val s = "ppwwkewa"
     var sett:HashSet<Char> = HashSet()
    for(i in 0..s.length-1)
    {
       sett.add(s[i])
    } 
    
    println(sett.toString())
      
}

<------------------------------------------------------------------------------------------------------------------------->

//find the all unique substrings from a single string.
fun main() {
    val s = "ppwwkew"
   
    var left=0
    var right=0
    var length=s.length
    var map:HashMap<String,Int> = HashMap()
    while(right<length)
    {
        if(check(s.substring(left,right) , s[right] ,map))
        {
           left++ 
            
        }
           else
        {
            right++
        }
        
       
        
    }
    
     println(map.toString())    
}


    fun check(s:String,c:Char,map:HashMap<String,Int>):Boolean
           {
              
               for(i in 0 .. s.length-1)
               {
                   if(s[i]==c)
                   {
                       map.put(s,s.length)
                       return true
                   }
                 
               }
               
               return false
           }


<------------------------------------------------------------------------------------------------------------------------->

// Reverse a String Sentene 

fun main() {
      val s = "the      sky is blue"
      val arr = s.split("\\s+".toRegex())
      println(arr.reversed().joinToString(" ").trim())
           
}
